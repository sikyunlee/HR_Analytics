{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"highchart() %>% hc_chart(type = \"column\") %>% hc_title(text = \"Attrition by Education Level\") %>% \n    hc_add_series(name = \"Churns by Education Level\", type = \"column\", \n        showInLegend = FALSE, data = hr_data5, hcaes(name = Education, \n            y = count), lineWidth = 0, dataLabels = list(enabled = TRUE,  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`_fseq`(`_lhs`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"freduce(value, `_function_list`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"function_list[[i]](value)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"hc_add_series(., name = \"Average Monthly Income by Education\", \n    type = \"line\", showInLegend = FALSE, data - hr_data4, hcaes(name = Education, \n        y = avg_incomerange), lineWidth = 0, dataLabels = list(enabled = TRUE, \n        formatter = highcharter::JS(\"function() {\\n                        if (this.y > 1000) {\\n                        return \\\"$\\\" + Highcharts.numberFormat((this.y/1000), 1) + \\\"K\\\"\\n                        } else {\\n                        return this.y\\n                        }\\n                        }\")),  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Ops.data.frame(data, hr_data4)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(gettextf(\"%s only defined for equally-sized data frames\", \n    sQuote(.Generic)), domain = NA)","line_number":0}],"message":"Error in Ops.data.frame(data, hr_data4) : \n  ‘-’ only defined for equally-sized data frames\n"}